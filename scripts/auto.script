//! Auto
/////////////////////////////////////////////////////
//
//
//  This is a virtual device and will try to detect the
//  connected cortex-m vendor.
//
//  All the called vendor specific scripts don't depend on this
//  script and can also be called directly to skip vendor detection.
//

/////////////////////////////////////////////////////
//
//  The entry point for this script
//
function main()
{
    local probe = ::InterfAPI()
    local result

    //============================================================
    // ==== ATmel  cortex-M
    {
        result = probe.readMem32(0x41002018)
        if( (result >=0) && (probe.value32 == 0) )
            result = probe.readMem32(0x400E0740)
        if( (result >=0) && (probe.value32 == 0) )
            result = probe.readMem32(0x400E0940)
        if(  (result >= 0 ) && (probe.value32) )
        {
            // Load the vendor script and go from there
            require("atmel-auto.script")
            return main()
        }
    }

    //============================================================
    // ==== Siliabs  (Gecko's) cortex-M
    {
        result = probe.readMem32(0x0FE081FC)
        if(  (result >= 0 ) && (probe.value32) )
        {
            // Load the vendor script and go from there
            require("silabs-auto.script")
            return set_target(probe.value32)
        }
    }

    //============================================================
    // ==== STmicro  cortex-M
    {
        // Walk through all the known STmicro CPU id's
        // STmicro is really insane with this :(  (Silabs bravo!)
        result = probe.readMem32(0xE0042000)      // Default
        if( (result >=0) && (probe.value32 == 0) )
            result = probe.readMem32(0x40015800)  // M0
        if( (result >=0) && (probe.value32 == 0) )
            result = probe.readMem32(0x5C001000)  // H7
        if( (result >=0) && (probe.value32 == 0) )
            result = probe.readMem32(0xE0044000)  // L5
        if(  (result >= 0 ) && (probe.value32) )
        {
            // Load the vendor script and go from there
            require("stm32-auto.script")
            return set_target( probe.value32)
        }
    }


    //============================================================
    // ==== NXP  cortex-M

    // ToDo....
    //    if( nxp)
    //    {
    //        require("nxp-auto.script")
    //        return main();
    //    }


    errorf("Error:\tCan't detect MCU vendor!\n\tIf reset is disabled (\"dr\" option), try with reset.")
    return ERROR_NOTIFIED
}
